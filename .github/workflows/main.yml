# This is a basic workflow to help you get started with Actions

name: CI to Docker Hub

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
          
      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: pull image_1
        id: docker_pull_1
        run:  |
          docker pull 123459096/first-repo:pull_request_process_image
	  echo 'Bitbucket commit : $GITHUB_SHA'
	  echo 'Destination_Branch : $GITHUB_HEAD_REF'
          echo 'Source_Branch :$GITHUB_BASE_REF'
	  echo 'Repo_Name : $GITHUB_REPOSITORY'
	  echo 'PR_ID  $GITHUB_REF'

     - name: pull image_2
        id: docker_pull_2
       run:  |
         docker ps -aq -f status=running -f name=pull_request_image
	 while [ $(docker ps -aq -f status=running -f name=pull_request_image) ]; do   echo Executing checks; sleep 5; done
	 docker ps -aq -f status=running -f name=pull_request_image
	 docker logs pull_request_image
	 echo "Bitbucket commit"
	 echo 'Done-----'  

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
